upstream koji_web {
    server koji-web.koji.box:80;
}

upstream koji_hub {
    server koji-hub.koji.box:80;
}

upstream koji_hub_ssl {
    server koji-hub.koji.box:443;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name koji.box;
    return 301 https://$server_name$request_uri;
}

# HTTPS server with self-signed certificate
server {
    listen 443 ssl http2;
    server_name koji.box;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/koji.box.crt;
    ssl_certificate_key /etc/nginx/ssl/koji.box.key;

    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Koji Hub API - forward /kojihub/* to koji-hub
    location /kojihub/ {
        proxy_pass http://koji_hub/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    location /kojihub/ssllogin/ {
        proxy_pass https://koji_hub_ssl/kojihub/ssllogin/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Crucially, pass the Authorization header from the client to Apache
        proxy_pass_request_headers on;

        # The following are required for the Negotiate handshake
        # Nginx must not cache the 401 response from Apache, as it is part of the negotiation.
        proxy_set_header Connection "";
        proxy_set_header X-Auth-Request-Redirect http://$host$request_uri;

        # Nginx must not filter out the Authorization header on its own
        proxy_pass_header Authorization;

        # This prevents Nginx from stripping the WWW-Authenticate header
        # in the 401 response from Apache.
        proxy_pass_header WWW-Authenticate;
    }

    # Downloads - serve static content from Koji storage with indexing
    location /kojifiles/ {
        alias /mnt/koji/;
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
        autoindex_format html;

        # Security for downloads
        location ~* \.(rpm|deb|tar\.gz|tar\.bz2|zip)$ {
            add_header Content-Disposition "attachment";
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Deny access to sensitive files
        location ~* \.(key|pem|crt|conf)$ {
            deny all;
        }
    }

    # Koji Web - default root path
    location / {
        proxy_pass http://koji_web/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /404.html {
        root /var/www/koji/static;
        internal;
    }

    location = /50x.html {
        root /var/www/koji/static;
        internal;
    }
}
